# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"
            - name: Test PyPI Build
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install setuptools wheel twine pytest pytest-cov dunamai
                  python setup.py sdist bdist_wheel
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-activate-base: true
                  activate-environment: ""
            - name: Test Conda Build
              run: |
                  conda install -qy -c conda-forge dunamai
                  conda install -qy conda-build anaconda-client conda-verify
                  conda build -c conda-forge -b --output-folder . .
    check:
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.os }} (${{ matrix.config.py }})
        strategy:
            fail-fast: true
            matrix:
                config:
                    - { os: windows-latest, py: "3.8" }
                    - { os: macOS-latest, py: "3.8" }
                    - { os: ubuntu-latest, py: "3.8" }

        env:
            SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.py }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.config.py }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install pytest pytest-cov dunamai
                  pip install -r requirements.txt
                  pip install -r requirements_dev.txt
                  pip install -e .
            - name: Run Tests
              run: |
                  python -m pytest --cov=simple_pypackage --cov-report=xml tests
            - name: Upload Codecov
              uses: codecov/codecov-action@v2
              with:
                  env_vars: OS,PYTHON
